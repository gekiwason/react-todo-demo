[{"/home/wason/react-todo-demo/src/App.tsx":"1","/home/wason/react-todo-demo/src/reportWebVitals.ts":"2","/home/wason/react-todo-demo/src/index.tsx":"3","/home/wason/react-todo-demo/src/firebase.ts":"4","/home/wason/react-todo-demo/src/TaskItem.tsx":"5"},{"size":1802,"mtime":1608716603640,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":1608524619040,"results":"8","hashOfConfig":"7"},{"size":500,"mtime":1608524619040,"results":"9","hashOfConfig":"7"},{"size":655,"mtime":1608641738660,"results":"10","hashOfConfig":"7"},{"size":1382,"mtime":1608716626350,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3puomi",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"/home/wason/react-todo-demo/src/App.tsx",[],"/home/wason/react-todo-demo/src/reportWebVitals.ts",[],"/home/wason/react-todo-demo/src/index.tsx",[],"/home/wason/react-todo-demo/src/firebase.ts",[],"/home/wason/react-todo-demo/src/TaskItem.tsx",["23"],"import React, { useState } from \"react\";\nimport styles from \"./TaskItem.module.css\";\nimport firebase from \"firebase/app\";\nimport { ListItem, TextField, Grid } from \"@material-ui/core\";\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport { db } from \"./firebase\";\n\ninterface PROPS {\n  id: string;\n  title: string;\n}\n\nconst TaskItem: React.FC<PROPS> = (props) => {\n  const [title, setTitle] = useState(props.title);\n\n  const editTask = () => {\n    db.collection(\"tasks\").doc(props.id).set({ title: title }, { merge: true });\n  };\n\n  const deleteTask = () => {\n    db.collection(\"tasks\").doc(props.id).delete();\n  };\n\n  return (\n    <ListItem>\n      <h2>{props.title}</h2>\n      <Grid container justify=\"flex-end\">\n        <TextField\n          InputLabelProps={{\n            shrink: true,\n          }}\n          label=\"Edit task?\"\n          value={title}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setTitle(e.target.value);\n          }}\n        />\n      </Grid>\n      <button className={styles.taskitem__icon} onClick={editTask}>\n        <EditOutlinedIcon />\n      </button>\n      <button className={styles.taskitem__icon} onClick={deleteTask}>\n        <DeleteOutlineOutlinedIcon />\n      </button>\n    </ListItem>\n  );\n};\n\nexport default TaskItem;\n",{"ruleId":"24","severity":1,"message":"25","line":3,"column":8,"nodeType":"26","messageId":"27","endLine":3,"endColumn":16},"@typescript-eslint/no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar"]